<?xml version="1.0"?>
<!-- embed/EmbedAccessClassObject.mxml -->
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx">
	
	<fx:Declarations>
		<!--setup the connection to the Java class-->
		<mx:RemoteObject
			id="PathsService"
			destination="pathsservice"
			showBusyCursor="true"
			>
			
			<mx:method name="getPaths" 
					   result="resultGetPaths(event)" 
					   fault="faultGetPaths(event)"/>
		</mx:RemoteObject>
		
		<s:Rect  bottomLeftRadiusX="0" bottomLeftRadiusY="0" bottomRightRadiusX="100" bottomRightRadiusY="100" id="rect"/> 
	</fx:Declarations>
		
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.Container;
			import mx.core.UIComponent;
			import mx.graphics.SolidColorStroke;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.utils.ObjectUtil;
			
			import mx.events.FlexEvent;
			
			import view.Alarm;
			import view.Angle;
			import view.PipeWater;
			import view.map.GraphicElem;
			import vo.AngleVO;
			import vo.BaseVO;
			import vo.BuildingVO;
			import vo.PipeVO;
			
			import spark.primitives.Line;

		private var aOtrezok:Otrezok ;
		private var pathsArrCol:ArrayCollection;
		private var otr:Otrezok;
		
		public function resultGetPaths(event:ResultEvent):void {
			
			pathsArrCol = event.result as ArrayCollection;
			//Alert.show( ObjectUtil.toString(event.result) );
			//otr = pathsArrCol.getItemAt(0) as Otrezok;
			
			//Alert.show(ObjectUtil.toString(pathsArrCol.length));
			//Alert.show(ObjectUtil.toString(otr.x1)+" "+ObjectUtil.toString(otr.y1)+" "+ObjectUtil.toString(otr.x2)+" "+ObjectUtil.toString(otr.y2));
			drawLines(pathsArrCol);
			
		} 
		

		private function faultGetPaths(event:FaultEvent):void{
			
			Alert.show( ObjectUtil.toString(event.fault) );
			
			
		}
		
		private function drawLines(ac:ArrayCollection ):void
		{
			var i:int;
			i = 0;
			var otr:Otrezok;
			var myShape:Shape = new Shape();
			myShape = new Shape() ;
			
			for each(var item:Otrezok in ac)
			{

				myShape.graphics.lineStyle(2, 0x00008B, .75);
				myShape.graphics.moveTo(item.x1, item.y1);
				myShape.graphics.lineTo(item.x2, item.y2);
				
			}	
			spr.addChild(myShape);
			
		}
		

		
		public function zoomByWheel(event:MouseEvent):void
		{
			trace(spr.scaleX);
			trace("delta"+event.delta);
			if (event.delta>0)
			{
				if (spr.scaleX < 2)
				{
					spr.scaleX += 0.1;
					spr.scaleY += 0.1;
				}	
			}
			if (event.delta<0)
			{
				if (spr.scaleX > 0.2)
				{
					spr.scaleX -= 0.1;
					spr.scaleY -= 0.1;
				}
			}
		}
			
			
		public function setText()
		{
			label.text = "fdf";
		}

		]]>	
	</fx:Script>
	
	
	
	
	<s:VGroup>
		<s:Button  label="Загрузить SVG1" click="PathsService.getPaths()"/>	
		
		<mx:Panel  y="30" width="1300" height="600" id="pnl"  title="Отрисовка SVG" borderColor="#008040" fontFamily="Arial" fontWeight="bold" fontSize="13">
			<s:Scroller id="myScroller" width="100%" height="100%">
				<s:VGroup height="100%" width="100%" clipAndEnableScrolling="true" id = "vgroup" mouseWheel="zoomByWheel(event)" >
					<s:SpriteVisualElement width="100%" height="100%" id="spr" />
				</s:VGroup>
			</s:Scroller>		
		</mx:Panel>
		
		<s:HGroup height="100%" width="100%">
			<s:Label text="Zoom" x="250" id="label"/>
				
			<!--<mx:HSlider id="zoomSlider" minimum=".1" value="1"
						maximum="2" change="applyZoom()" width="180" x="300"/>-->
		</s:HGroup>
	</s:VGroup>
	
</s:Application>
